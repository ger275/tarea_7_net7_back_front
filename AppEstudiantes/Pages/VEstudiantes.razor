@page "/v_estudiante"
@using AppEstudiantes.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<h1>Formulario de Estudiantes</h1>

@if (getEstudiantesError || iestudiantes is null)
{
    <p>No se encontro la Api.</p>
}
else
{
    <form>
        <label for="lbl_id" class="form-label">ID</label>
        <input @bind="var_idestudiante" type="text" class="form-control" placeholder="ID" readonly>
        <label for="lbl_carne" class="form-label">Carne</label>
        <input @bind="var_carne" type="text" class="form-control" placeholder="Ejemplo: E001">
        <label for="lbl_nombres" class="form-label">Nombres</label>
        <input @bind="var_nombres" type="text" class="form-control" placeholder="Ejemplo: Nombre 1 Nombre 2">
        <label for="lbl_apellidos" class="form-label">Apellidos</label>
        <input @bind="var_apellidos" type="text" class="form-control" placeholder="Ejemplo: Apellido 1 Apellido 2">
        <label for="lbl_direccion" class="form-label">Direccion</label>
        <input @bind="var_direccion" type="text" class="form-control" placeholder="Ejemplo: #casa calle avenida lugar">
        <label for="lbl_telefono" class="form-label">Telefono</label>
        <input @bind="var_telefono" type="text" class="form-control" placeholder="Ejemplo: 55554621">
        <label for="lbl_correo" class="form-label">Email</label>
        <input @bind="var_correo" type="text" class="form-control" placeholder="Ejemplo: correo@gmail.com">
        <label for="lbl_idsangre" class="form-label">ID tipo sangre</label>
        <input @bind="var_idsangre" type="text" class="form-control" placeholder="ID">
        <label for="lbl_fn" class="form-label">Fecha Nacimiento</label>
        <input @bind="var_fn" type="date" class="form-control">
        <br>
        <button type="button" @onclick="Crear" class="btn btn-info">Crear</button>
        <button type="button" @onclick="Actualizar" class="btn btn-success">Modificar</button>
        <button type="button" @onclick="Eliminar" class="btn btn-danger">Eliminar</button>
    </form>
    
    <table class="table">
        <tbody>
            <tr>
                <th></th>
                <th>CARNE</th>
                <th>NOMBRES</th>
                <th>APELLIDOS</th>
                <th>DIRECCION</th>
                <th>TELEFONO</th>
                <th>CORREO</th>
                <th>TIPO DE SANGRE</th>
                <th>FECHA NACIMIENTO</th>
            </tr>
        </tbody>
        @foreach (var estudiante in iestudiantes)
        {
            <tr>
                <td><button type="button" @onclick="(() => enviarParametros(estudiante.id_estudiante, estudiante.carne, estudiante.nombres, estudiante.apellidos, estudiante.direccion, estudiante.telefono, estudiante.correo_electronico, estudiante.id_tipo_sangre, estudiante.fecha_nacimiento))" class="btn btn-info"><i class="oi oi-pencil"></i></button></td>
                <td>@estudiante.carne</td>
                <td>@estudiante.nombres</td>
                <td>@estudiante.apellidos</td>
                <td>@estudiante.direccion</td>
                <td>@estudiante.telefono</td>
                <td>@estudiante.correo_electronico</td>
                <td>@estudiante.id_tipo_sangre</td>
                <td>@estudiante.fecha_nacimiento</td>
            </tr>
        }
    </table>
}

@code {
    private string? url = "https://localhost:7032/api/Estudiantes";
    private Int32 var_idestudiante, var_idsangre;
    private string? var_carne, var_nombres, var_apellidos, var_direccion, var_telefono, var_correo;
    private DateTime? var_fn;
    //Enviar parametros a variables locales
    void enviarParametros(Int32 id, string? cn, string? nom, string? ape, string? dir, string? tel, string? correo, Int32 sangre, DateTime? f)
    {
        var_idestudiante = id;
        var_carne = cn;
        var_nombres = nom;
        var_apellidos = ape;
        var_direccion = dir;
        var_telefono = tel;
        var_correo = correo;
        var_idsangre = sangre;
        var_fn = f;
    }
    //Crear
    private async Task Crear()
    {
        var client = ClientFactory.CreateClient();
        var addItem = new Estudiantes { carne=var_carne, nombres=var_nombres, apellidos=var_apellidos, direccion=var_direccion, telefono=var_telefono, correo_electronico=var_correo, id_tipo_sangre=var_idsangre, fecha_nacimiento=var_fn };
        await client.PostAsJsonAsync(url, addItem);
        await OnInitializedAsync();
    }
    //Actualizar
    private async Task Actualizar()
    {
        var client = ClientFactory.CreateClient();
        var addItem = new Estudiantes { carne=var_carne, nombres=var_nombres, apellidos=var_apellidos, direccion=var_direccion, telefono=var_telefono, correo_electronico=var_correo, id_tipo_sangre=var_idsangre, fecha_nacimiento=var_fn };
        await client.PutAsJsonAsync($"{url}/{var_idestudiante}", addItem);
        await OnInitializedAsync();
    }
    //Eliminar
    private async Task Eliminar()
    {
        var client = ClientFactory.CreateClient();
        await client.DeleteAsync($"{url}/{var_idestudiante}");
        await OnInitializedAsync();
    }
    private IEnumerable<Estudiantes>? iestudiantes = Array.Empty<Estudiantes>();
    private bool getEstudiantesError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            url);
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            iestudiantes = await JsonSerializer.DeserializeAsync
                <IEnumerable<Estudiantes>>(responseStream);
        }
        else
        {
            getEstudiantesError = true;
        }

        shouldRender = true;
    }

}